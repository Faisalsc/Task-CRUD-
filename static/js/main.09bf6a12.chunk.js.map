{"version":3,"sources":["actions/actions.js","components/form.js","components/task.js","actions/reducers.js","actions/store.js","index.js"],"names":["Active","FORM_HANDLE_CHANGE","CREATE_TASK","DELETE_TASK","UPDATE_TASK","FORM_INITIAL_VALUE","users","connect","state","formValues","props","handleCancel","a","accordian","myChangeHandler","event","id","dispatch","type","target","value","Object","keys","map","className","name","onChange","e","htmlFor","length","user","index","variant","color","onClick","preventDefault","taskDescription","alert","console","error","message","handleSubmit","TaskManagement","handleAccordianClick","status","handleEdit","taskValue","handleDelete","updateAccordian","values","parseInt","Math","random","task","phoneNumber","prompt","text","date","window","open","encodeURI","this","active","taskValues","style","float","assignUser","handleShare","Component","number","initialState","reducer","action","cureentValue","push","updatedTask","t","JSON","parse","stringify","findIndex","splice","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.09bf6a12.chunk.js","sourcesContent":["export const Active = \"Active\"\r\nexport const FORM_HANDLE_CHANGE = \"FORM_HANDLE_CHANGE\";\r\nexport const CREATE_TASK = \"CREATE_TASK\";\r\nexport const DELETE_TASK = \"DELETE_TASK\";\r\nexport const UPDATE_TASK = \"UPDATE_TASK\";\r\nexport const FORM_INITIAL_VALUE = \"FORM_INITIAL_VALUE\";","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { FORM_INITIAL_VALUE, FORM_HANDLE_CHANGE } from \"../actions/actions\";\r\nconst users = [\"--select--\", \"Jonny StrÃ¶mberg\", \"Jonas Arnklint\", \"Martina Elm\", \"Gustaf Lindqvist\"]\r\nfunction TaskForm(props) {\r\n    const handleSubmit = (props) => {\r\n        try {\r\n            if (props.formValues.taskDescription) {\r\n                if (props.formValues.id) {\r\n                    props.accordian(props.formValues, \"update\")\r\n                } else {\r\n                    props.accordian(props.formValues, \"create\")\r\n                    props.dispatch({ type: FORM_INITIAL_VALUE });\r\n                }\r\n            } else {\r\n                alert(\"Task Descrition is manditory\")\r\n            }\r\n        } catch (e) {\r\n            console.error(e.message)\r\n        }\r\n    }\r\n    const handleCancel = async (props) => {\r\n        props.accordian()\r\n    }\r\n    const myChangeHandler = (event, id, props) => {\r\n        props.dispatch({\r\n            type: FORM_HANDLE_CHANGE,\r\n            ...props.formValues,\r\n            [id]: event.target.value\r\n        })\r\n\r\n    }\r\n    function getOption() {\r\n        return users.map((user, index) => <option key={`${index}`} value={user}>{user}</option>)\r\n    }\r\n    function getFields() {\r\n        return props.formValues && Object.keys(props.formValues).map(id => {\r\n            switch (id) {\r\n                case \"taskDescription\":\r\n                    return <div key={id}>\r\n                        <label className=\"element-display\">Task Description</label>\r\n                        <input type=\"text\" name=\"taskDescription\" value={props.formValues[id]} onChange={(e) => myChangeHandler(e, id, props)}></input>\r\n                    </div>\r\n                case \"date\":\r\n                    return <div key={id}>\r\n                        <label htmlFor=\"date\" className=\"element-display\">Date:</label>\r\n                        <input type=\"date\" id=\"date\" name=\"date\" value={props.formValues[id]} onChange={(e) => myChangeHandler(e, id, props)}></input>\r\n                    </div>\r\n                case \"time\":\r\n                    return <div key={id}>\r\n                        <label htmlFor=\"time\" className=\"element-display\">Time:</label>\r\n                        <input type=\"time\" id=\"time\" name=\"time\" value={props.formValues[id]} onChange={(e) => myChangeHandler(e, id, props)} ></input>\r\n                    </div>\r\n                case \"assignUser\":\r\n                    return <div key={id}>\r\n                        <label htmlFor=\"cars\" className=\"element-display\">Assign User:</label>\r\n                        <select name=\"cars\" id=\"cars\" value={props.formValues[id].length === 0 ? \"\" : props.formValues[id]} onChange={(e) => myChangeHandler(e, id, props)}>\r\n                            {getOption()}\r\n                        </select>\r\n                    </div>\r\n\r\n                default:\r\n                    return null\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <form >\r\n            {getFields()}\r\n            <div className=\"footer\">\r\n                <button\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    className=\"cancel-btn\"\r\n                    onClick={e => { e.preventDefault(); handleCancel(props) }}\r\n                >\r\n                    Cancel\r\n          </button>\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"submit-btn\"\r\n                    onClick={e => { e.preventDefault(); handleSubmit(props) }}\r\n                >\r\n                    Save\r\n          </button>\r\n            </div>\r\n\r\n        </form>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        formValues: state.formValues\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps)(TaskForm);\r\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AiOutlinePlus, AiOutlineMinus, AiOutlineEdit, AiOutlineDelete, AiOutlineShareAlt } from \"react-icons/ai\";\nimport \"./task.css\";\nimport { FORM_INITIAL_VALUE, FORM_HANDLE_CHANGE, Active, DELETE_TASK, CREATE_TASK, UPDATE_TASK } from \"../actions/actions\";\nimport TaskForm from \"./form\";\n\n\nclass TaskManagement extends Component {\n\n  handleAccordianClick = (status) => {\n    this.props.dispatch({\n      type: 'Active',\n      value: !status\n    });\n    this.props.dispatch({\n      type: FORM_INITIAL_VALUE\n    });\n  }\n  handleEdit = (taskValue) => {\n    this.props.dispatch({\n      type: 'Active',\n      value: true\n    });\n    this.props.dispatch({\n      type: FORM_HANDLE_CHANGE,\n      ...taskValue\n    });\n  }\n  handleDelete = (taskValue) => {\n    // delete taskValue[\"type\"]\n    this.props.dispatch({\n      type: Active,\n      value: false\n    });\n    this.props.dispatch({\n      ...taskValue,\n      type: DELETE_TASK,\n    });\n  }\n  updateAccordian = (values, type) => {\n    switch (type) {\n      case \"create\":\n        values[\"id\"] = parseInt(Math.random() * 10000);\n        this.props.dispatch({\n          type: CREATE_TASK,\n          value: values\n        });\n        break;\n      case \"update\":\n        this.props.dispatch({\n          type: UPDATE_TASK,\n          value: values\n        });\n        break;\n      default:\n        break;\n    }\n    this.props.dispatch({\n      type: Active,\n      value: false\n    });\n  }\n  handleShare(task) {\n    const phoneNumber = prompt(\"Please enter 10 digit phonenumber.\");\n    const text = `Description:${task.taskDescription} Date:-${task.date}`\n    window.open(`https://wa.me/+91${phoneNumber}?text=${encodeURI(text)}`)\n  }\n  render() {\n    return (\n      <div className=\"root-container\">\n        <div className=\"accordian-container\">\n          <div className={`accordion ${this.props.active ? \"active\" : \"\"}`} >\n            <label>{`Tasks(${this.props.taskValues.length})`}</label>\n            {!this.props.active ? <AiOutlinePlus style={{ float: \"right\" }} onClick={() => this.handleAccordianClick(this.props.active)}></AiOutlinePlus> : null}\n            {this.props.active ? <AiOutlineMinus style={{ float: \"right\" }} onClick={() => this.handleAccordianClick(this.props.active)}></AiOutlineMinus> : null}\n          </div>\n          <div className={this.props.active ? \"panel element-display\" : \"panel element-hide\"}>\n\n            <TaskForm accordian={this.updateAccordian} />\n\n          </div>\n        </div>\n\n        <div className=\"card card-root\">\n          <h1>Created Task</h1>\n          {\n            this.props.taskValues.length > 0 ?\n              this.props.taskValues.map((task, index) => {\n                return <div key={`${index}_${task.id}`} className=\"card-container\">\n                  <div id={task.id}>\n                    <h4><b>{task.assignUser}</b></h4>\n                    <p>{task.taskDescription}</p>\n                  </div>\n\n                  <AiOutlineEdit style={{ \"marginLeft\": \"30px\" }} onClick={() => this.handleEdit(task)}></AiOutlineEdit>\n                  <AiOutlineDelete style={{ \"marginLeft\": \"30px\" }} onClick={() => this.handleDelete(task)}></AiOutlineDelete>\n                  <AiOutlineShareAlt style={{ \"marginLeft\": \"30px\" }} onClick={() => this.handleShare(task)}></AiOutlineShareAlt>\n                </div>\n              })\n              : <p>No Tasks found</p>\n          }\n\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    number: state.number,\n    active: state.active,\n    taskValues: state.taskValues\n  };\n}\n\nexport default connect(mapStateToProps)(TaskManagement);\n","import { Active, FORM_HANDLE_CHANGE, CREATE_TASK, DELETE_TASK, UPDATE_TASK, FORM_INITIAL_VALUE } from \"./actions\"\r\nconst initialState = {\r\n  number: 0,\r\n  active: false,\r\n  formValues: {\r\n    \"taskDescription\": \"\",\r\n    \"date\": \"\",\r\n    \"time\": \"\",\r\n    \"assignUser\": []\r\n  },\r\n  taskValues: []\r\n};\r\nfunction reducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case Active:\r\n      return {\r\n        ...state,\r\n        active: action.value\r\n      };\r\n    case FORM_HANDLE_CHANGE:\r\n      return {\r\n        ...state,\r\n        formValues: action\r\n      };\r\n    case FORM_INITIAL_VALUE:\r\n      return {\r\n        ...state,\r\n        formValues: initialState.formValues\r\n      };\r\n    case CREATE_TASK:\r\n      const cureentValue = state.taskValues;\r\n      cureentValue.push(action.value)\r\n      return {\r\n        ...state,\r\n        taskValues: cureentValue\r\n      };\r\n    case UPDATE_TASK:\r\n      const updatedTask = state.taskValues.map(t => t.id === action.value.id ? action.value : t);\r\n      return {\r\n        ...state,\r\n        taskValues: updatedTask\r\n      };\r\n    case DELETE_TASK:\r\n      const task = JSON.parse(JSON.stringify(state.taskValues));\r\n      const index = task.findIndex(task => task.id === action.id);\r\n      task.splice(index, 1);\r\n      return {\r\n        ...state,\r\n        taskValues: task\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducers';\r\nconst store = createStore(reducer);\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport './index.css';\nimport TaskManagement from './components/task';\nimport store from './actions/store';\nReactDOM.render(\n  <Provider store={store}>\n    <TaskManagement />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}